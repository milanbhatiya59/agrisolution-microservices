version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - community
    restart: always
    networks:
      - agrisolution-network

  frontend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend
    ports:
      - "3000:80"
    container_name: agrisolution-frontend
    env_file:
      - ./core/frontend/.env
    networks:
      - agrisolution-network

  community:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.community
    ports:
      - "3001:80"
    container_name: agrisolution-community
    env_file:
      - ./core/backend/.env
    networks:
      - agrisolution-network
  
  farm:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.farm
    ports:
      - "3002:80"
    container_name: agrisolution-farm
    env_file:
      - ./core/backend/.env
    networks:
      - agrisolution-network

  notification:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.notification
    ports:
      - "3003:80"
    container_name: agrisolution-notification
    env_file:
      - ./core/backend/.env
    networks:
      - agrisolution-network

  pestanddiseasedetection:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.pestanddiseasedetection
    ports:
      - "3004:80"
    container_name: agrisolution-pestanddiseasedetection
    env_file:
      - ./core/backend/.env
    networks:
      - agrisolution-network

  soilcard:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.soilcard
    ports:
      - "3005:80"
    container_name: agrisolution-soilcard
    env_file:
      - ./core/backend/.env
    networks:
      - agrisolution-network
  
  user:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.user
    ports:
      - "3006:80"
    container_name: agrisolution-user
    env_file:
      - ./core/backend/.env
    networks:
      - agrisolution-network

  warning:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.warning
    ports:
      - "3007:80"
    container_name: agrisolution-warning
    env_file:
      - ./core/backend/.env
    networks:
      - agrisolution-network

  webhook:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.webhook
    ports:
      - "3008:80"
    container_name: agrisolution-webhook
    env_file:
      - ./core/backend/.env
    networks:
      - agrisolution-network

networks:
  agrisolution-network:
    driver: bridge
